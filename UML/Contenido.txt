Mapas
    SalaCartasMapa
    ------------------------
    - mapaCartas: Character[][] = {...}
    - posXInicial: int = 11
    - posYInicial: int = 14
    - posXEntrada: int = 21
    - posYEntrada: int = 1
    - posXCartaMas: int = 13
    - posYCartaMas: int = 2

    SalaJuegosAzarMapa
    ------------------------
    - mapaAzar: Character[][] = {...}
    - posXInicial: int = 3
    - posYInicial: int = 1
    - posXEntrada: int = 3
    - posYEntrada: int = 14
    - posXRuleta: int = 9
    - posYRuleta: int = 4
    - posXSlots: int = 2
    - posYSlots: int = 11
    - posXBingo: int = 15
    - posYBingo: int = 13
    - posXDados: int = 24
    - posYDados: int = 7

    SalaPrincipalMapa
    ------------------------
    - mapaSalaPrincipal: Character[][] = {...}
    - posXInicial: int = 4
    - posYInicial: int = 1

Patterns/Observer
    PullPushModelObservable
    ------------------------
    - attach(PullPushModelObserver): void
    - detach(PullPushModelObserver): void
    - detachAll(): void
    - notifyObservers(): void

    PullPushModelObserver
    ------------------------
    - update(PullPushModelObservable, Object): void

    PullPushModelObserverInteractive
    ------------------------
    - interactive(): void

    Subscription
    ------------------------
    - subscribe(Jugador): void
    - unsubscribe(Jugador): void


personas
    Jugador
    ------------------------
    - Jugador(String, Integer, Double, Integer, Integer)
    - Jugador(String, Integer, Double)
    - attach(PullPushModelObserver): void → PullPushModelObservable
    - detach(PullPushModelObserver): void → PullPushModelObservable
    - detachAll(): void → PullPushModelObservable
    - notifyObservers(): void → PullPushModelObservable
    - move(Integer, Integer): void
    - interacting(): void
    - getPosX(): Integer
    - getPosY(): Integer
    - getInteract(): Boolean
    - getName(): String
    - setNombre(String): void
    - getEdad(): Integer
    - setEdad(Integer): void
    - getDinero(): Double
    - setDinero(Double): void
    - getFichas(): Integer
    - setFichas(Integer): void
    - getSalaActual(): Sala
    - setSala(Sala): void
    - getInventario(): Boolean
    - setInventario(Boolean): void
    - agregarFichas(Integer): void
    - restarFichas(Integer): void
    - agregarDinero(Double): void
    - restarDinero(Double): void
    - agregarItem(Items): void
    - mostrarInventario(): void
    - usarItems(): void

    - datosUsuarioEnPartida(): void
    - actualizarDesde(Jugador): void
    - toString(): String → Object

    Atributos:
    - serialVersionUID: long = 1L
    - posX: Integer
    - posY: Integer
    - interact: Boolean
    - items: List<Items>
    - inventario: Boolean
    - nombre: String
    - edad: Integer
    - dinero: Double
    - fichas: Integer
    - salaActual: Sala
    - observers: List<PullPushModelObserver>


    JugadorFactory
    ------------------------
    - crearJugador(String, String, int, double): Jugador

    JugadorNPC
    ------------------------
    - JugadorNPC(String, int, double)
    - datosUsuarioEnPartida(): void → Jugador

    JugadorPrincipal
    ------------------------
    - JugadorPrincipal(String, int, double)
    - datosUsuarioEnPartida(): void → Jugador

recursos
    Baraja
    ------------------------
    - Baraja()
    - mezclar(): void
    - repartir(): Carta
    - cartasRestantes(): int
    - reiniciar(): void

    Atributos:
    - cartas: Carta[]
    - cartasDisponibles: int

    Carta
    ------------------------
    - Carta(String, String)
    - getNumero(): String
    - getTipo(): String
    - getValorNumerico(): Integer
    - getPrioridadPalo(): Integer
    - getNombreArchivo(): String
    - toString(): String → Object

    Atributos:
    - valor: String
    - tipo: String

    Games
    ------------------------
    - Games(String)
    - getIdentifier(): String
    - SLOTS: Games
    - RULETA: Games
    - BINGO: Games
    - DADOS: Games
    - CARTAMASALTA: Games

    Atributos:
    - identifier: String

    MensajesEstaticos
    ------------------------
    - playerUI(Jugador): void
    - instructions(): void
    - interactSave(): void
    - interactATM(): void
    - interactTable(String): void
    - badCommand(): void
    - interactFenrir(): void


salas
    Casino
    ------------------------
    - iniciarCasino(): void

    Sala
    ------------------------
    - Sala(Jugador, Character[][])
    - Sala(Jugador, Character[][], ArrayList<Mesa>, ArrayList<Pasillo>)
    - Sala(Jugador, Character[][], ArrayList<Mesa>, ArrayList<Pasillo>, Integer, Integer)
    - interfazPrincipal(Jugador): void
    - moverJugador(int, int): void
    - mostrarMapa(): void
    - entradaTerminal(Scanner): void
    - iniciarInterfaz(): void
    - setJugador(Jugador): void
    - getPosInitialX(): Integer
    - getPosInitialY(): Integer
    - getPasillos(): ArrayList<Pasillo>

    Atributos:
    - mapa: Character[][]
    - jugador: Jugador
    - mesas: ArrayList<Mesa>
    - pasillos: ArrayList<Pasillo>
    - posInitialX: Integer
    - posInitialY: Integer

    SalaAzar
    ------------------------
    - SalaAzar(Jugador)
    - getInstance(): SalaAzar
    - subscribe(Jugador): void → Subscription
    - unsubscribe(Jugador): void → Subscription
    - toString(): String → Object

    Atributos:
    - instancia: SalaAzar

    SalaCartas
    ------------------------
    - SalaCartas(Jugador)
    - getInstance(): SalaCartas
    - subscribe(Jugador): void → Subscription
    - unsubscribe(Jugador): void → Subscription
    - toString(): String → Object

    Atributos:
    - instancia: SalaCartas

    SalaPrincipal
    ------------------------
    - SalaPrincipal(Jugador)
    - getInstance(Jugador): SalaPrincipal
    - getInstance(): SalaPrincipal
    - subscribe(Jugador): void → Subscription
    - unsubscribe(Jugador): void → Subscription
    - toString(): String → Object

    Atributos:
    - instancia: SalaPrincipal
    - cajero: Cajero = new Cajero(...)
    - puertaSalida: PuertaSalida = new PuertaSalida(...)
    - fenrir: Fenrir = new Fenrir(...)

    SalaRegistro
    ------------------------
    - SalaRegistro()
    - asciiArt(): void
    - informacionCasino(): void
    - iniciarJugador(): Jugador
    - cargarJugador(): Jugador
    - crearJugador(): Jugador
    - verificarMayorEdad(): Boolean
    - toString(): String → Object

    Atributos:
    - jugador: Jugador


    Casino
    ------------------------
    - iniciarCasino(): void

    Sala
    ------------------------
    - Sala(Jugador, Character[][])
    - Sala(Jugador, Character[][], ArrayList<Mesa>, ArrayList<Pasillo>)
    - Sala(Jugador, Character[][], ArrayList<Mesa>, ArrayList<Pasillo>, Integer, Integer)
    - interfazPrincipal(Jugador): void
    - moverJugador(int, int): void
    - mostrarMapa(): void
    - entradaTerminal(Scanner): void
    - iniciarInterfaz(): void
    - setJugador(Jugador): void
    - getPosInitialX(): Integer
    - getPosInitialY(): Integer
    - getPasillos(): ArrayList<Pasillo>

    Atributos:
    - mapa: Character[][]
    - jugador: Jugador
    - mesas: ArrayList<Mesa>
    - pasillos: ArrayList<Pasillo>
    - posInitialX: Integer
    - posInitialY: Integer

    SalaAzar
    ------------------------
    - SalaAzar(Jugador)
    - getInstance(): SalaAzar
    - subscribe(Jugador): void → Subscription
    - unsubscribe(Jugador): void → Subscription
    - toString(): String → Object

    Atributos:
    - instancia: SalaAzar

    SalaCartas
    ------------------------
    - SalaCartas(Jugador)
    - getInstance(): SalaCartas
    - subscribe(Jugador): void → Subscription
    - unsubscribe(Jugador): void → Subscription
    - toString(): String → Object

    Atributos:
    - instancia: SalaCartas

    SalaPrincipal
    ------------------------
    - SalaPrincipal(Jugador)
    - getInstance(Jugador): SalaPrincipal
    - getInstance(): SalaPrincipal
    - subscribe(Jugador): void → Subscription
    - unsubscribe(Jugador): void → Subscription
    - toString(): String → Object

    Atributos:
    - instancia: SalaPrincipal
    - cajero: Cajero = new Cajero(...)
    - puertaSalida: PuertaSalida = new PuertaSalida(...)
    - fenrir: Fenrir = new Fenrir(...)

    SalaRegistro
    ------------------------
    - SalaRegistro()
    - asciiArt(): void
    - informacionCasino(): void
    - iniciarJugador(): Jugador
    - cargarJugador(): Jugador
    - crearJugador(): Jugador
    - verificarMayorEdad(): Boolean
    - toString(): String → Object

    Atributos:
    - jugador: Jugador


acciones
    Clase Cajero:

    Cajero(Integer, Integer)
    update(PullPushModelObservable, Object): void
    interactive(): void
    iniciarCajero(Scanner): void
    cambiarDineroAFichas(Scanner): void
    cambiarFichasADinero(Scanner): void
    definirCantidadFichas(Scanner): int
    definirImporteDinero(Scanner): float
    comprobarFichas(): void
    comprobarDinero(): void
    posX: Integer
    posY: Integer
    jugador: Jugador
    interfaz: ASCIICajero

    Clase Fenrir

    Fenrir(Integer, Integer)
    update(PullPushModelObservable, Object): void
    interactive(): void
    iniciarBar(Scanner): void
    comprarBebida(Scanner): void
    procesarCompraDinero(Items): void
    posX: Integer
    posY: Integer
    jugador: Jugador
    bebidasDisponibles: List<Items> = new ArrayList<>()
    interfaz: ASCIIFenrir

    Clase Mesa

    Mesa(String, Integer, Integer, Integer)
    getNumParticipantes(): Integer
    getPosX(): Integer
    getPosY(): Integer
    getJugador(): Jugador
    getStrategy(): StrategyJuego
    setJugador(Jugador): void
    setStrategy(StrategyJuego): void
    putStrategy(): void
    jugar(): void
    interactive(): void
    update(PullPushModelObservable, Object): void
    toString(): String
    nombre: String
    numParticipantes: Integer
    posX: Integer
    posY: Integer
    jugador: Jugador
    strategy: StrategyJuego

    Clase Pasillo

    Pasillo(Integer, Integer, Sala)
    update(PullPushModelObservable, Object): void
    posX: Integer
    posY: Integer
    salaSiguiente: Sala

    Clase PuertaSalida

    PuertaSalida(Integer, Integer)
    update(PullPushModelObservable, Object): void
    interactive(): void
    iniciarPuerta(Scanner): void
    guardarPartida(): void
    cargarPartida(): void
    salir(): void
    posX: Integer
    posY: Integer
    jugador: Jugador
    interfaz: ASCIIPuerta

ascii
    clase ASCIIBingo

    titulo(): void

    clase ASCIICajero

    ASCIICajero(Jugador)
    tirulo(): void
    opciones(): void
    jugador: jugador

    Clase ASCIICartaMasAlta

    ASCIICartaMasAlta(Jugador)
    titulo(): void
    cheatsheet(): void
    opciones(): void
    jugador: Jugador


    Clase ASCIIDados

    ASCIIDados(Jugador)
    titulo(): void
    cheatsheet(): void
    opciones(): void
    mostrarResultadoDados(Integer, Integer, Integer): void
    jugador: Jugador


    Clase ASCIIFenrir

    ASCIIFenrir
    titulo(): void
    opcionesBar(): void
    mostrarMenuBebidas(List<Items>): void
    carta(): void


    Clase ASCIIGeneral

    ASCIIGeneral
    esperarTecla(): void
    limpiarPantalla(): void


    Clase ASCIIPuerta

    ASCIIPuerta(Jugador)
    titulo(): void
    opciones(): void
    jugador: Jugador


    Clase ASCIIRuleta

    ASCIIRuleta(Jugador)
    titulo(): void
    interfazRuleta(): void
    cheatsheet(): void
    interfazPartida(): void
    opciones(): void
    jugador: Jugador


    Clase ASCIISlot

    ASCIISlot(Jugador)
    titulo(): void
    cheatsheet(): void
    opciones(): void
    mostrarResultados(String, String, String): void
    jugador: Jugador


excep
    Excepcion ExcepcionJugadorMenorEdad

    ExcepcionJugadorMenorEdad(String)

    Excepcion ExcepcionJugadorNoEncontrado

    ExcepcionJugadorNoEncontrado(String)

    Excepcion ExcepcionJugadorSinDinero

    ExcepcionJugadorSinDinero(String)

    Excepcion ExcepcionJugadorSinFichas

    ExcepcionJugadorSinFichas(String)


items
    Clase Bebida

    Bebida(String, Double, String)
    getNombre(): String
    getPrecio(): Double
    getDescripcion(): String
    usar(): void
    nombre: String
    precio: Double
    descripcion: String

    Interfaz Items

    getNombre(): String
    getPrecio(): Double
    getDescripcion(): String
    usar(): void


juegos
    Clase Bingo

    Bingo(Jugador)
    iniciarPartida(): void
    generarCartones(int): void
    jugarBingo(int): void
    imprimirCarton(String[][]): void
    tacharNumero(String[][], int): void
    esBingo(String[][]): boolean
    toString(): String
    FILAS: int = 4
    COLUMNAS: int = 6
    cartones: String[][]
    numerosDisponibles: HashSet<Integer>
    jugadores: Jugador[]
    bote: int
    apuesta: int
    jugador: Jugador
    interfaz: ASCIIBingo

    Clase CartaMasAlta

    CartaMasAlta(Jugador)
    definirApuesta(Scanner): Integer
    comprobarFichas(): void
    iniciarPartida(): void
    jugarRonda(Integer): void
    toString(): String
    baraja: Baraja
    interfaz: ASCIICartaMasAlta
    jugador: Jugador
    apuesta: Integer

    Clase Dados

    Dados(Jugador)
    definirApuesta(Scanner): Integer
    comprobarFichas(): void
    iniciarPartida(): void
    jugarDados(Scanner): void
    jugarPunto(Scanner, Integer, Random): void
    tirarDados(Random): Integer
    toString(): String
    apuesta: Integer
    jugador: Jugador
    interfaz: ASCIIDados

    Clase Ruleta

    Ruleta(Jugador)
    comprobarFichas(): void
    iniciarPartida(): void
    definirApuesta(Scanner): Integer
    opcionesDeApuesta(Scanner): void
    tirarRuleta(): Integer
    apostarPorColor(Scanner): void
    apostarParImpar(Scanner): void
    apostarPorNumero(Scanner): void
    apostarPorDocena(Scanner): void
    apostarMitad(Scanner): void
    esNumeroRojo(Scanner): boolean
    toString(): String
    apuesta: Integer
    jugador: Jugador
    interfaz: ASCIIRuleta

    Clase Slot

    Slot(Jugador)
    comprobarFichas(): void
    iniciarPartida(): void
    definirApuesta(Scanner): Integer
    jugarSlot(): void
    calcularPremio(String): Integer
    toString(): String
    apuesta: Integer
    jugador: Jugador
    interfaz: ASCIISlot

    Interfaz StrategyJuego

    StrategyJuego
    iniciarPartida(): void


